// Code generated by protoc-gen-go. DO NOT EDIT.
// source: entity.proto

package orderv2

import (
	fmt "fmt"
	proto "github.com/yyyiue/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// CategoryType 班级分类.
type CategoryType int32

const (
	CategoryType_CATEGORY_TYPE_INVALID    CategoryType = 0
	CategoryType_CATEGORY_TYPE_OPEN       CategoryType = 10
	CategoryType_CATEGORY_TYPE_EXPERIENCE CategoryType = 20
	CategoryType_CATEGORY_TYPE_SPECIAL    CategoryType = 30
	CategoryType_CATEGORY_TYPE_SERIES     CategoryType = 40
)

var CategoryType_name = map[int32]string{
	0:  "CATEGORY_TYPE_INVALID",
	10: "CATEGORY_TYPE_OPEN",
	20: "CATEGORY_TYPE_EXPERIENCE",
	30: "CATEGORY_TYPE_SPECIAL",
	40: "CATEGORY_TYPE_SERIES",
}

var CategoryType_value = map[string]int32{
	"CATEGORY_TYPE_INVALID":    0,
	"CATEGORY_TYPE_OPEN":       10,
	"CATEGORY_TYPE_EXPERIENCE": 20,
	"CATEGORY_TYPE_SPECIAL":    30,
	"CATEGORY_TYPE_SERIES":     40,
}

func (x CategoryType) String() string {
	return proto.EnumName(CategoryType_name, int32(x))
}

func (CategoryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cf50d946d740d100, []int{0}
}

// ChildOrder.
type ChildOrder struct {
	ChildOrders          map[string]int32 `protobuf:"bytes,1,rep,name=child_orders,json=childOrders,proto3" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3" json:"childOrders"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"                                 `
	XXX_unrecognized     []byte           `json:"-"                                 `
	XXX_sizecache        int32            `json:"-"                                 `
}

func (m *ChildOrder) Reset()         { *m = ChildOrder{} }
func (m *ChildOrder) String() string { return proto.CompactTextString(m) }
func (*ChildOrder) ProtoMessage()    {}
func (*ChildOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf50d946d740d100, []int{0}
}

func (m *ChildOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChildOrder.Unmarshal(m, b)
}
func (m *ChildOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChildOrder.Marshal(b, m, deterministic)
}
func (m *ChildOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChildOrder.Merge(m, src)
}
func (m *ChildOrder) XXX_Size() int {
	return xxx_messageInfo_ChildOrder.Size(m)
}
func (m *ChildOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_ChildOrder.DiscardUnknown(m)
}

var xxx_messageInfo_ChildOrder proto.InternalMessageInfo

func (m *ChildOrder) GetChildOrders() map[string]int32 {
	if m != nil {
		return m.ChildOrders
	}
	return nil
}

func init() {
	proto.RegisterEnum("gsx.data.order.order.v2.CategoryType", CategoryType_name, CategoryType_value)
	proto.RegisterType((*ChildOrder)(nil), "gsx.data.order.order.v2.ChildOrder")
	proto.RegisterMapType((map[string]int32)(nil), "gsx.data.order.order.v2.ChildOrder.ChildOrdersEntry")
}

func init() { proto.RegisterFile("entity.proto", fileDescriptor_cf50d946d740d100) }

var fileDescriptor_cf50d946d740d100 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xcd, 0x2b, 0xc9,
	0x2c, 0xa9, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x4f, 0x2f, 0xae, 0xd0, 0x4b, 0x49,
	0x2c, 0x49, 0xd4, 0xcb, 0x2f, 0x4a, 0x49, 0x2d, 0x82, 0x92, 0x65, 0x46, 0x4a, 0x4b, 0x19, 0xb9,
	0xb8, 0x9c, 0x33, 0x32, 0x73, 0x52, 0xfc, 0x41, 0x22, 0x42, 0xe1, 0x5c, 0x3c, 0xc9, 0x20, 0x5e,
	0x3c, 0x58, 0x41, 0xb1, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0xb7, 0x91, 0x89, 0x1e, 0x0e, 0xed, 0x7a,
	0x08, 0xad, 0x48, 0xcc, 0x62, 0xd7, 0xbc, 0x92, 0xa2, 0xca, 0x20, 0xee, 0x64, 0x84, 0x88, 0x94,
	0x1d, 0x97, 0x00, 0xba, 0x02, 0x21, 0x01, 0x2e, 0xe6, 0xec, 0xd4, 0x4a, 0x09, 0x46, 0x05, 0x46,
	0x0d, 0xce, 0x20, 0x10, 0x53, 0x48, 0x84, 0x8b, 0xb5, 0x2c, 0x31, 0xa7, 0x34, 0x55, 0x82, 0x49,
	0x81, 0x51, 0x83, 0x35, 0x08, 0xc2, 0xb1, 0x62, 0xb2, 0x60, 0xd4, 0x9a, 0xc2, 0xc8, 0xc5, 0xe3,
	0x9c, 0x58, 0x92, 0x9a, 0x9e, 0x5f, 0x54, 0x19, 0x52, 0x59, 0x90, 0x2a, 0x24, 0xc9, 0x25, 0xea,
	0xec, 0x18, 0xe2, 0xea, 0xee, 0x1f, 0x14, 0x19, 0x1f, 0x12, 0x19, 0xe0, 0x1a, 0xef, 0xe9, 0x17,
	0xe6, 0xe8, 0xe3, 0xe9, 0x22, 0xc0, 0x20, 0x24, 0xc6, 0x25, 0x84, 0x2a, 0xe5, 0x1f, 0xe0, 0xea,
	0x27, 0xc0, 0x25, 0x24, 0xc3, 0x25, 0x81, 0x2a, 0xee, 0x1a, 0x11, 0xe0, 0x1a, 0xe4, 0xe9, 0xea,
	0xe7, 0xec, 0x2a, 0x20, 0x82, 0x69, 0x60, 0x70, 0x80, 0xab, 0xb3, 0xa7, 0xa3, 0x8f, 0x80, 0x9c,
	0x90, 0x04, 0x97, 0x08, 0x9a, 0x14, 0x48, 0x5b, 0xb0, 0x80, 0x86, 0x93, 0x3f, 0x97, 0x74, 0x72,
	0x7e, 0x2e, 0xae, 0xe0, 0x71, 0xe2, 0x76, 0x05, 0x47, 0x42, 0x00, 0x28, 0x0e, 0x02, 0x18, 0xa3,
	0xd8, 0xc1, 0x12, 0x65, 0x46, 0xa7, 0x98, 0xc4, 0xdd, 0x8b, 0x2b, 0x62, 0x5c, 0x12, 0x4b, 0x12,
	0x63, 0xc0, 0x01, 0x02, 0x25, 0xc3, 0x8c, 0x92, 0xd8, 0xc0, 0xf1, 0x65, 0x0c, 0x08, 0x00, 0x00,
	0xff, 0xff, 0xc4, 0x76, 0x0e, 0x63, 0xbf, 0x01, 0x00, 0x00,
}
